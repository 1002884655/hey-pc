/* eslint-disable */
const ToolClass = {
  IsLeapYear (year) {
    return !(year % (year % 100 ? 4 : 400))
  },
  DoubleNum (num) { // 单位数补位
    return num > 9 ? num : `0${num}`
  },
  CheckEmail (target) { // 校验邮箱格式
    let reg = /^[A-Za-z0-9\u4e00-\u9fa5]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$/
    return reg.test(target)
  },
  GetUrlParams (name) { // 获取url参数
    let query = window.location.search.substring(1)
    let vars = query.split('&')
    for (let i = 0; i < vars.length; i++) {
      let pair = vars[i].split('=')
      if (pair[0] == name) { return pair[1] }
    }
    return false
  },
  DateFormat (timestamp) { // 格式化时间
    if (timestamp) {
      let hh = Math.floor(timestamp / (1000 * 60 * 60))
      let mm = Math.floor(timestamp % (1000 * 60 * 60) / (1000 * 60))
      let ss = Math.floor(timestamp % (1000 * 60) / 1000)
      return `${hh > 9 ? hh : hh ? `0${hh}` : ''}${hh ? ':' : ''}${mm > 9 ? mm : '0' + mm}:${ss > 9 ? ss : '0' + ss}`
    } else {
      return '00:00'
    }
  },
  WindowClick (callback) { // window点击事件
    let WindowClickFn = window.onclick
    window.onclick = () => {
      if (WindowClickFn) {
        WindowClickFn()
      }
      callback()
    }
  },
  ImageObjectFit () { // image object-fit IE兼容
    if (!!window.ActiveXObject || 'ActiveXObject' in window) { // 判断IE
      let TargetArr = document.getElementsByTagName('img')
      for (let n = 0; n < TargetArr.length; n++) {
        if (TargetArr[n].getAttribute('class').indexOf('cover') !== -1) {
          TargetArr[n].style.display = 'none'
          TargetArr[n].parentElement.style.backgroundRepeat = 'norepeat'
          TargetArr[n].parentElement.style.backgroundSize = 'cover'
          TargetArr[n].parentElement.style.backgroundPosition = 'center center'
          TargetArr[n].parentElement.style.backgroundImage = `url(${TargetArr[n].getAttribute('src')})`
        }
      }
    }
  },
  CheckUrl (url) { // 校验url
    let reg = /^(?=^.{3,255}$)[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+$/
    return reg.test(url)
  },
  CheckPhone () { // 校验手机
    return false
  },
  MatchingCapacity (target, speed) { // 匹配清晰度
    let CurrentCapacity = 4 // 默认 720p
    let CurrentIndex = 0
    let Arr = []
    if (speed <= 70) { // 360p
      CurrentCapacity = 1
    } else if (speed > 70 && speed <= 179) { // 576p
      CurrentCapacity = 2
    } else if (speed > 179 && speed <= 280) { // 720p
      CurrentCapacity = 4
    } else if (speed > 280) { // 1080p
      CurrentCapacity = 8
    }
    if (target[`${CurrentCapacity}`] - 0 === 0) { // 匹配清晰度无资源，取最佳清晰度
      for (let n in target) {
        Arr.push({ name: n, value: target[n] })
      }
      for (let n = CurrentIndex; n >= 0; n--) {
        if (Arr[n].value - 0) {
          return Arr[n].name
        }
      }
    }
    return CurrentCapacity
  }
}

export default ToolClass
