import Axios from 'axios'
import Api from '../../util/Api'

export default {
  namespaced: true,
  state: {
    MediaInfo: null, // 视频信息
    CommentList: [], // 视频评论列表
    TotalCommentCounts: 0, // 视频总评论数
    VideoRecommendList: [], // 推荐视频列表
    HotVideoListForDay: [] // 视频日排行
  },
  mutations: {
    EmptyCommentList (state) { // 清空评论数据
      state.CommentList = []
    },
    EditMediaInfo (state, data) { // 修改视频信息
      state.MediaInfo = { ...state.MediaInfo, ...data }
    },
    SetMediaInfo (state, data) { // 写入视频信息
      state.MediaInfo = data || null
    },
    AddMainComment (state, data) { // 静态增加视频评论内容
      state.TotalCommentCounts += 1
      state.CommentList.unshift({
        UserIcon: 'self',
        UserName: 'self',
        CreateDate: Date.now(),
        LikesCounts: 0,
        ShowReplyList: false,
        Text: data.content,
        Id: data.id,
        ReplyNum: 0,
        PageNum: 1,
        List: []
      })
    },
    SetCommentList (state, data) { // 赋值评论数据
      data = data.list || []
      data.map((item) => {
        state.CommentList.push({
          UserIcon: item.picPath + '/' + item.pic,
          UserName: item.accountName,
          CreateDate: item.createTime,
          LikesCounts: item.likeNum,
          ShowReplyList: false,
          Text: item.content,
          Id: item.id,
          ReplyNum: item.replyNum,
          PageNum: 1,
          List: []
        })
      })
    },
    SetTotalCommentCounts (state, data) { // 赋值评论总数
      state.TotalCommentCounts = data || 0
    },
    PushSubCommentList (state, data) { // 插入二级回复列表
      let index = data.location
      data.data.list.map((item) => {
        state.CommentList[index].List.unshift({
          UserIcon: item.picPath + '/' + item.pic,
          UserName: item.accountName,
          AccountId: item.accountId,
          CreateDate: item.createTime,
          LikesCounts: item.likeNum,
          Text: item.content,
          Id: item.id,
          ReplyName: item.atName,
          ReplyId: item.atId
        })
      })
    },
    UpdateLevel1PageNum (state, data) { // 更新一级评论分页数
      data.setNum(state.CommentList[data.index].PageNum)
    },
    AddSubComment (state, data) { // 静态插入一二级评论回复
      state.CommentList[data.index].ReplyNum += 1
      state.CommentList[data.index].List.push({
        UserIcon: 'self',
        UserName: 'self',
        CreateDate: Date.now(),
        LikesCounts: 0,
        Text: data.data.content,
        Id: 'self',
        ReplyName: data.data.level - 0 === 1 ? null : data.data.atName,
        ReplyId: data.data.level - 0 === 1 ? null : data.data.atId
      })
    },
    AddVideoRecommend (state, data) { // 插入推荐视频数据
      state.VideoRecommendList = data.list || []
    },
    AddHotVideoListForDay (state, data) { // 插入视频日排行数据
      state.HotVideoListForDay = data || []
    }
  },
  actions: {
    GetHotVideoListForDay (context, payload) { // 获取视频日排行
      return new Promise((resolve, reject) => {
        Axios({
          method: Api.Video.GetHotVideoListForDay.method,
          url: Api.Video.GetHotVideoListForDay.url
        }).then(res => {
          if (res.data.code - 0 === 0) {
            context.commit('AddHotVideoListForDay', res.data.data)
          }
          resolve(res)
        }).catch((res) => {
          reject(res)
        })
      })
    },
    GetVideoRecommend (context, payload) { // 提交一二级评论
      return new Promise((resolve, reject) => {
        Axios({
          method: Api.Video.GetVideoRecommend.method,
          url: Api.Video.GetVideoRecommend.url,
          params: { ...payload }
        }).then(res => {
          if (res.data.code - 0 === 0) {
            context.commit('AddVideoRecommend', res.data.data)
          }
          resolve(res)
        }).catch((res) => {
          reject(res)
        })
      })
    },
    SubmitSubComment (context, payload) { // 提交一二级评论
      return new Promise((resolve, reject) => {
        Axios({
          method: Api.Video.SubmitSubComment.method,
          url: Api.Video.SubmitSubComment.url,
          data: { ...payload.data }
        }).then(res => {
          if (res.data.code - 0 === 0) {
            context.commit('AddSubComment', payload)
          }
          resolve(res)
        }).catch((res) => {
          reject(res)
        })
      })
    },
    GetSubCommentList (context, payload) { // 获取二级评论列表
      return new Promise((resolve, reject) => {
        Axios({
          method: Api.Video.GetCommentList.method,
          url: Api.Video.GetCommentList.url,
          params: { ...(payload.query || {}) },
          data: { ...(payload.data || {}) }
        }).then(res => {
          if (res.data.code - 0 === 0) {
            context.commit('PushSubCommentList', { data: res.data.data, location: payload.location })
            resolve(res)
          } else {
            reject(res)
          }
        }).catch((res) => {
          reject(res)
        })
      })
    },
    GetCommentTotalCounts (context, payload) { // 获取视频评论列表
      return new Promise((resolve, reject) => {
        Axios({
          method: Api.Video.GetCommentTotalCounts.method,
          url: Api.Video.GetCommentTotalCounts.url,
          params: { ...payload }
        }).then(res => {
          if (res.data.code - 0 === 0) {
            context.commit('SetTotalCommentCounts', res.data.data.totalCount)
            resolve(res)
          } else {
            reject(res)
          }
        }).catch((res) => {
          reject(res)
        })
      })
    },
    GetCommentList (context, payload) { // 获取视频评论列表
      return new Promise((resolve, reject) => {
        Axios({
          method: Api.Video.GetCommentList.method,
          url: Api.Video.GetCommentList.url,
          params: { ...(payload.query || {}) },
          data: { ...(payload.data || {}) }
        }).then(res => {
          if (res.data.code - 0 === 0) {
            context.commit('SetCommentList', res.data.data)
            resolve(res)
          } else {
            reject(res)
          }
        }).catch((res) => {
          reject(res)
        })
      })
    },
    SubmitCommentForVideo (context, payload) { // 提交视频评论
      return new Promise((resolve, reject) => {
        Axios({
          method: Api.Video.SubmitCommentForVideo.method,
          url: Api.Video.SubmitCommentForVideo.url,
          data: { ...payload }
        }).then(res => {
          if (res.data.code - 0 === 0) {
            context.commit('AddMainComment', { ...payload, id: res.data.data.id })
          }
          resolve(res)
        }).catch((res) => {
          reject(res)
        })
      })
    },
    GetMediaInfoById (context, payload) { // 通过id获取视频信息
      return new Promise((resolve, reject) => {
        Axios({
          method: Api.Video.GetMediaInfoById.method,
          url: Api.Video.GetMediaInfoById.url + payload.id,
          params: { ...payload.params }
        }).then(res => {
          if (res.data.code - 0 === 0) {
            context.commit('SetMediaInfo', res.data.data)
          }
          resolve(res)
        }).catch((res) => {
          reject(res)
        })
      })
    }
  }
}
